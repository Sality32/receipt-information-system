// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using ReceiptInformationSystem.Infrastructure.Data;

#nullable disable

namespace ReceiptInformationSystem.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250506084944_ResourceReceiptRelationsAndParameterTypes")]
    partial class ResourceReceiptRelationsAndParameterTypes
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("ReceiptInformationSystem.Domain.Entities.ParameterStep", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("StepReceiptId")
                        .HasColumnType("uuid");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("StepReceiptId");

                    b.ToTable("ParameterSteps");
                });

            modelBuilder.Entity("ReceiptInformationSystem.Domain.Entities.ParameterType", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("ParameterTypes");
                });

            modelBuilder.Entity("ReceiptInformationSystem.Domain.Entities.Receipt", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Receipts");
                });

            modelBuilder.Entity("ReceiptInformationSystem.Domain.Entities.StepReceipt", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("ReceiptId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("ReceiptId");

                    b.ToTable("StepReceipts");
                });

            modelBuilder.Entity("ReceiptInformationSystem.Domain.Entities.ParameterStep", b =>
                {
                    b.HasOne("ReceiptInformationSystem.Domain.Entities.StepReceipt", "StepReceipt")
                        .WithMany("Parameters")
                        .HasForeignKey("StepReceiptId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("StepReceipt");
                });

            modelBuilder.Entity("ReceiptInformationSystem.Domain.Entities.StepReceipt", b =>
                {
                    b.HasOne("ReceiptInformationSystem.Domain.Entities.Receipt", "Receipt")
                        .WithMany("Steps")
                        .HasForeignKey("ReceiptId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Receipt");
                });

            modelBuilder.Entity("ReceiptInformationSystem.Domain.Entities.Receipt", b =>
                {
                    b.Navigation("Steps");
                });

            modelBuilder.Entity("ReceiptInformationSystem.Domain.Entities.StepReceipt", b =>
                {
                    b.Navigation("Parameters");
                });
#pragma warning restore 612, 618
        }
    }
}
