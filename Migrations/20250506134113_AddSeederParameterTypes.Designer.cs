// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using ReceiptInformationSystem.Infrastructure.Data;

#nullable disable

namespace ReceiptInformationSystem.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250506134113_AddSeederParameterTypes")]
    partial class AddSeederParameterTypes
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("ReceiptInformationSystem.Domain.Entities.ParameterStep", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("StepRecipeId")
                        .HasColumnType("uuid");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("TypeData")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("StepRecipeId");

                    b.ToTable("ParameterSteps");
                });

            modelBuilder.Entity("ReceiptInformationSystem.Domain.Entities.ParameterType", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("TypeData")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("ParameterTypes");

                    b.HasData(
                        new
                        {
                            Id = new Guid("35fee709-1568-495c-9163-7ee9ddf7784a"),
                            Description = "Penjelasan tentang langkah",
                            Name = "Deskripsi",
                            TypeData = "text"
                        },
                        new
                        {
                            Id = new Guid("b4e54ea5-9e64-42db-8fcc-ff3dd25e085e"),
                            Description = "Lama waktu pelaksanaan langkah",
                            Name = "Durasi",
                            TypeData = "integer"
                        },
                        new
                        {
                            Id = new Guid("be0c8dd8-93db-494a-8a27-8fc69e4bf01e"),
                            Description = "Suhu yang dibutuhkan",
                            Name = "Suhu",
                            TypeData = "float"
                        },
                        new
                        {
                            Id = new Guid("c40582ab-bfcd-4a7e-bf54-33ef61aec5ed"),
                            Description = "Tekanan pada alat yang digunakan",
                            Name = "tekanan",
                            TypeData = "float"
                        });
                });

            modelBuilder.Entity("ReceiptInformationSystem.Domain.Entities.Recipe", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Recipes");
                });

            modelBuilder.Entity("ReceiptInformationSystem.Domain.Entities.StepRecipe", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("RecipeId")
                        .HasColumnType("uuid");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("RecipeId");

                    b.ToTable("StepRecipes");
                });

            modelBuilder.Entity("ReceiptInformationSystem.Domain.Entities.ParameterStep", b =>
                {
                    b.HasOne("ReceiptInformationSystem.Domain.Entities.StepRecipe", "StepRecipe")
                        .WithMany("Parameters")
                        .HasForeignKey("StepRecipeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("StepRecipe");
                });

            modelBuilder.Entity("ReceiptInformationSystem.Domain.Entities.StepRecipe", b =>
                {
                    b.HasOne("ReceiptInformationSystem.Domain.Entities.Recipe", "Recipe")
                        .WithMany("Steps")
                        .HasForeignKey("RecipeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Recipe");
                });

            modelBuilder.Entity("ReceiptInformationSystem.Domain.Entities.Recipe", b =>
                {
                    b.Navigation("Steps");
                });

            modelBuilder.Entity("ReceiptInformationSystem.Domain.Entities.StepRecipe", b =>
                {
                    b.Navigation("Parameters");
                });
#pragma warning restore 612, 618
        }
    }
}
